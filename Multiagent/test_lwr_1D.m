% function test_lwr_1D% test for 1D data set; due to globally optimized distance metric,% one can observe overfitting in the flat parts of the functionclear allclcmse_cv=100;n = 100;% a random training set% X = rand(n,1);X=(0:0.01:(1-0.01))';Y = X - sin(2*pi*X.^3).*cos(2*pi*X.^3).*exp(X.^4) + randn(n,1)*0.1;% a systematic test setXt = (0:.01:1)';Yt = Xt - sin(2*pi*Xt.^3).*cos(2*pi*Xt.^3).*exp(Xt.^4);% find the optimal distance metric by cross validationDmin = 10;Dmax = 10000;n_iter = 500;% for j=0:n_iter,j=0;log_x=[];log_mse=[];log_next=[];tor=0;ctr=1;yq=0;avail_i=1:length(X);while  mse_cv>0.02 	D = Dmin-1 + exp(log(Dmax-(Dmin-1))/n_iter*j);%     D=D_arr(j)	mse_cv = 0;    	for ii=1:n        if ii==1            i=randi(length(X));        else 		XX=X;		YY=Y;		XX(i)=[];		YY(i)=[];        yq_prev=yq;		[beta,yq]=lwr(XX,YY,D,X(i)');        if isnan(yq)            yq=yq_prev;        end		mse_cv = mse_cv+(Y(i)-yq)^2;        log_x=[log_x;X(i)];        log_mse=[log_mse;mse_cv];        xc=mean(log_x);        for jj=1:length(log_mse)            tor=tor+log_mse(jj)*(log_x(jj)-xc);        end        x_bal=tor/mean(log_mse);        tor=0;        for jj=avail_i        dist(jj)=X(jj)-x_bal;        dist(dist==0)=[];        end        select_i=find(dist==min(dist));            if length(select_i)>1                select_i=select_i(randi(length(select_i)));            end        i=avail_i(select_i);        i=ii;        logi(ctr)=avail_i(select_i);        ctr=ctr+1;        dist=[];        avail_i(select_i)=[];        if length(avail_i)==0            avail_i=1:length(X);        end        %        pause                end    end        mse_cv = mse_cv/n;	    	R(j+1,:)=[D,mse_cv];   	disp(sprintf('%3d: D=%f mse_cv=%f',j,D,mse_cv));    j=j+1;end[val,ind] = min(R(:,2));D = R(ind,1);% create the final LWR fitYp = zeros(size(Yt));for i=1:length(Xt),	[beta,yq]=lwr(X,Y,D,Xt(i)');	Yp(i,1) = yq;endfigure(1);plot(X,Y,'*',Xt,[ Yp]);title(sprintf('Optimial D=%f',D));figure(2);plot(R(:,1),R(:,2));j